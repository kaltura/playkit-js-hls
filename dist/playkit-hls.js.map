{"version":3,"sources":["webpack:///hls/webpack/universalModuleDefinition","webpack:///hls/webpack/bootstrap 33b03d612e719746b0c9","webpack:///hls/./hls-adapter.js","webpack:///hls/external {\"commonjs\":\"hls.js\",\"commonjs2\":\"hls.js\",\"amd\":\"hls.js\",\"root\":\"Hls\"}","webpack:///hls/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}"],"names":["HlsAdapter","videoElement","source","config","hlsConfig","Object","hasPropertyPath","playback","options","html5","hls","mimeType","canHlsPlayType","_hlsMimeTypes","includes","toLowerCase","_logger","debug","toString","warn","isHlsSupported","isSupported","version","_hls","_config","_addBindings","on","Events","ERROR","_onError","bind","MANIFEST_LOADED","_onManifestLoaded","LEVEL_SWITCHED","_onLevelSwitched","FRAG_CHANGED","_onFragChanged","AUDIO_TRACK_SWITCHED","_onAudioTrackSwitched","startTime","_loadPromise","Promise","resolve","onLevelUpdated","event","data","off","LEVEL_UPDATED","tracks","_playerTracks","startPosition","_sourceObj","url","loadSource","attachMedia","_videoElement","_trigger","CustomEvents","ABR_MODE_CHANGED","mode","isAdaptiveBitrateEnabled","_removeBindings","detachMedia","destroy","audioTracks","_parseAudioTracks","videoTracks","_parseVideoTracks","levels","textTracks","_parseTextTracks","concat","hlsAudioTracks","i","length","settings","id","active","audioTrack","label","name","language","lang","index","push","hlsVideoTracks","startLevel","bandwidth","bitrate","width","height","vidTextTracks","kind","videoTrack","currentLevel","textTrack","_disableAllTextTracks","_onTrackChanged","nextLevel","autoLevelEnabled","currentTime","duration","_fragmentDuration","details","live","e","startLoad","_parseTracks","frag","find","track","level","errorType","type","errorDetails","errorFatal","fatal","ErrorTypes","NETWORK_ERROR","error","MEDIA_ERROR","recoverMediaError","ErrorDetails","MANIFEST_LOAD_ERROR","MANIFEST_LOAD_TIMEOUT","MANIFEST_PARSING_ERROR","LEVEL_LOAD_ERROR","LEVEL_LOAD_TIMEOUT","LEVEL_SWITCH_ERROR","FRAG_LOAD_ERROR","FRAG_LOOP_LOADING_ERROR","FRAG_LOAD_TIMEOUT","FRAG_PARSING_ERROR","BUFFER_APPEND_ERROR","BUFFER_APPENDING_ERROR","getLogger"],"mappings":"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","file":"playkit-hls.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"hls.js\"), require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"hls.js\", \"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaykitJsHls\"] = factory(require(\"hls.js\"), require(\"playkit-js\"));\n\telse\n\t\troot[\"PlaykitJsHls\"] = factory(root[\"Hls\"], root[\"Playkit\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33b03d612e719746b0c9","//@flow\nimport Hlsjs from 'hls.js'\nimport {registerMediaSourceAdapter, BaseMediaSourceAdapter} from 'playkit-js'\nimport {Track, VideoTrack, AudioTrack, TextTrack} from 'playkit-js'\nimport {Utils} from 'playkit-js'\n\n/**\n * Adapter of hls.js lib for hls content.\n * @classdesc\n */\nexport default class HlsAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of the adapter.\n   * @member {string} id\n   * @static\n   * @private\n   */\n  static id: string = 'HlsAdapter';\n  /**\n   * The adapter logger.\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(HlsAdapter.id);\n  /**\n   * The supported mime types by the hls adapter.\n   * @member {Array<string>} _hlsMimeType\n   * @static\n   * @private\n   */\n  static _hlsMimeTypes: Array<string> = [\n    'application/x-mpegurl',\n    'application/vnd.apple.mpegurl',\n    'audio/mpegurl',\n    'audio/x-mpegurl',\n    'video/x-mpegurl',\n    'video/mpegurl',\n    'application/mpegurl'\n  ];\n  /**\n   * The hls player instance.\n   * @member {any} _hls\n   * @private\n   */\n  _hls: any;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n  /**\n   * Reference to the player tracks.\n   * @member {Array<Track>} - _playerTracks\n   * @type {Array<Track>}\n   * @private\n   */\n  _playerTracks: Array<Track>;\n\n  _fragmentDuration: number;\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    let hlsConfig = {};\n    if (Utils.Object.hasPropertyPath(config, 'playback.options.html5.hls')) {\n      hlsConfig = config.playback.options.html5.hls;\n    }\n    return new this(videoElement, source, hlsConfig);\n  }\n\n  /**\n   * Checks if hls adapter can play a given mime type.\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check.\n   * @returns {boolean} - Whether the hls adapter can play a specific mime type.\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canHlsPlayType = (typeof mimeType === 'string') ? HlsAdapter._hlsMimeTypes.includes(mimeType.toLowerCase()) : false;\n    HlsAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canHlsPlayType.toString());\n    return canHlsPlayType;\n  }\n\n  /**\n   * Checks if hls adapter can play a given drm data.\n   * For hls.js it always returns false.\n   * @returns {boolean} - Whether the hls adapter can play a specific drm data.\n   * @static\n   */\n  static canPlayDrm(): boolean {\n    HlsAdapter._logger.warn('canPlayDrm result is false');\n    return false;\n  }\n\n  /**\n   * Checks if the hls adapter is supported.\n   * @function isSupported\n   * @returns {boolean} - Whether hls is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    let isHlsSupported = Hlsjs.isSupported();\n    HlsAdapter._logger.debug('isSupported:' + isHlsSupported);\n    return isHlsSupported;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which will bind to the hls adapter\n   * @param {Object} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    HlsAdapter._logger.debug('Creating adapter. Hls version: ' + Hlsjs.version);\n    super(videoElement, source, config);\n    this._hls = new Hlsjs(this._config);\n    this._addBindings();\n  }\n\n  /**\n   * Adds the required bindings with hls.js.\n   * @function _addBindings\n   * @private\n   * @returns {void}\n   */\n  _addBindings(): void {\n    this._hls.on(Hlsjs.Events.ERROR, this._onError.bind(this));\n    this._hls.on(Hlsjs.Events.MANIFEST_LOADED, this._onManifestLoaded.bind(this));\n    this._hls.on(Hlsjs.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._hls.on(Hlsjs.Events.FRAG_CHANGED, this._onFragChanged.bind(this));\n    this._hls.on(Hlsjs.Events.AUDIO_TRACK_SWITCHED, this._onAudioTrackSwitched.bind(this));\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @param {number} startTime - Optional time to start the video from.\n   * @returns {Promise<Object>} - The loaded data\n   * @override\n   */\n  load(startTime: ?number): Promise<Object> {\n    if (!this._loadPromise) {\n      this._loadPromise = new Promise((resolve) => {\n        let onLevelUpdated = (event: string, data: any) => {\n          this._hls.off(Hlsjs.Events.LEVEL_UPDATED, onLevelUpdated);\n          resolve({tracks: this._playerTracks});\n        };\n        this._hls.on(Hlsjs.Events.LEVEL_UPDATED, onLevelUpdated);\n        if (startTime) {\n          this._hls.startPosition = startTime;\n        }\n        if (this._sourceObj && this._sourceObj.url) {\n          this._hls.loadSource(this._sourceObj.url);\n          this._hls.attachMedia(this._videoElement);\n          this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: this.isAdaptiveBitrateEnabled() ? 'auto' : 'manual'});\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroying the hls adapter.\n   * @function destroy\n   * @override\n   */\n  destroy(): void {\n    HlsAdapter._logger.debug('destroy');\n    super.destroy();\n    this._loadPromise = null;\n    this._sourceObj = null;\n    this._removeBindings();\n    this._hls.detachMedia();\n    this._hls.destroy();\n  }\n\n  /**\n   * Parse the hls tracks into player tracks.\n   * @param {any} data - The event data.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @private\n   */\n  _parseTracks(data: any): Array<Track> {\n    let audioTracks = this._parseAudioTracks(data.audioTracks || []);\n    let videoTracks = this._parseVideoTracks(data.levels || []);\n    let textTracks = this._parseTextTracks(this._videoElement.textTracks || []);\n    return audioTracks.concat(videoTracks).concat(textTracks);\n  }\n\n  /**\n   * Parse hls audio tracks into player audio tracks.\n   * @param {Array<Object>} hlsAudioTracks - The hls audio tracks.\n   * @returns {Array<AudioTrack>} - The parsed audio tracks.\n   * @private\n   */\n  _parseAudioTracks(hlsAudioTracks: Array<Object>): Array<AudioTrack> {\n    let audioTracks = [];\n    for (let i = 0; i < hlsAudioTracks.length; i++) {\n      // Create audio tracks\n      let settings = {\n        id: hlsAudioTracks[i].id,\n        active: this._hls.audioTrack === hlsAudioTracks[i].id,\n        label: hlsAudioTracks[i].name,\n        language: hlsAudioTracks[i].lang,\n        index: i\n      };\n      audioTracks.push(new AudioTrack(settings));\n    }\n    return audioTracks;\n  }\n\n  /**\n   * Parse hls video tracks into player video tracks.\n   * @param {Array<Object>} hlsVideoTracks - The hls video tracks.\n   * @returns {Array<VideoTrack>} - The parsed video tracks.\n   * @private\n   */\n  _parseVideoTracks(hlsVideoTracks: Array<Object>): Array<VideoTrack> {\n    let videoTracks = [];\n    for (let i = 0; i < hlsVideoTracks.length; i++) {\n      // Create video tracks\n      let settings = {\n        active: this._hls.startLevel === i,\n        label: hlsVideoTracks[i].name,\n        bandwidth: hlsVideoTracks[i].bitrate,\n        width: hlsVideoTracks[i].width,\n        height: hlsVideoTracks[i].height,\n        language: '',\n        index: i\n      };\n      videoTracks.push(new VideoTrack(settings));\n    }\n    return videoTracks;\n  }\n\n  /**\n   * Parse native video tag text tracks into player text tracks.\n   * @param {TextTrackList} vidTextTracks - The native video tag text tracks.\n   * @returns {Array<TextTrack>} - The parsed text tracks.\n   * @private\n   */\n  _parseTextTracks(vidTextTracks: TextTrackList | Array<Object>): Array<TextTrack> {\n    let textTracks = [];\n    for (let i = 0; i < vidTextTracks.length; i++) {\n      // Create text tracks\n      let settings = {\n        active: vidTextTracks[i].mode === 'showing',\n        label: vidTextTracks[i].label,\n        kind: vidTextTracks[i].kind,\n        language: vidTextTracks[i].language,\n        index: i\n      };\n      textTracks.push(new TextTrack(settings));\n    }\n    return textTracks;\n  }\n\n  /**\n   * Select an audio track.\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the audio track to select.\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (audioTrack instanceof AudioTrack && !audioTrack.active && this._hls.audioTracks) {\n      this._hls.audioTrack = audioTrack.id;\n    }\n  }\n\n  /**\n   * Select a video track.\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select.\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (videoTrack instanceof VideoTrack && (!videoTrack.active || this.isAdaptiveBitrateEnabled()) && this._hls.levels) {\n      if (this.isAdaptiveBitrateEnabled()) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: 'manual'});\n      }\n      this._hls.currentLevel = videoTrack.index;\n    }\n  }\n\n  /**\n   * Select a text track.\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select.\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (textTrack instanceof TextTrack && !textTrack.active && this._videoElement.textTracks) {\n      this._disableAllTextTracks();\n      this._videoElement.textTracks[textTrack.index].mode = 'showing';\n      HlsAdapter._logger.debug('Text track changed', textTrack);\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /** Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    this._disableAllTextTracks();\n  }\n\n  /**\n   * Enables adaptive bitrate switching according to hls.js logic.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (!this.isAdaptiveBitrateEnabled()) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: 'auto'});\n      this._hls.nextLevel = -1;\n    }\n  }\n\n  /**\n   * Checking if adaptive bitrate switching is enabled.\n   * @function isAdaptiveBitrateEnabled\n   * @returns {boolean} - Whether adaptive bitrate is enabled.\n   * @public\n   */\n  isAdaptiveBitrateEnabled(): boolean {\n    return this._hls.autoLevelEnabled;\n  }\n\n  seekToLiveEdge(): void {\n    this._videoElement.currentTime = this._videoElement.duration - 3 * this._fragmentDuration;\n  }\n\n  isLive(): boolean {\n    try {\n      return this._hls.levels[0].details.live;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _onManifestLoaded(event: string, data: any): void {\n    HlsAdapter._logger.debug('The source has been loaded successfully');\n    this._hls.startLoad();\n    this._playerTracks = this._parseTracks(data);\n  }\n\n  _onFragChanged(event: string, data: any): void {\n    if (data && data.frag) {\n      if (data.frag.duration) {\n        this._fragmentDuration = data.frag.duration;\n      }\n    }\n  }\n\n  /**\n   * Triggers on video track selection (auto or manually) the 'videotrackchanged' event forward.\n   * @function _onLevelSwitched\n   * @param {string} event - The event name.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onLevelSwitched(event: string, data: any): void {\n    let videoTrack = this._playerTracks.find((track) => {\n      return (track instanceof VideoTrack && track.index === data.level);\n    });\n    HlsAdapter._logger.debug('Video track changed', videoTrack);\n    this._onTrackChanged(videoTrack);\n  }\n\n  /**\n   * Triggers on audio track selection (auto or manually) the 'audiotrackchanged' event forward.\n   * @function _onAudioTrackSwitched\n   * @param {string} event - The event name.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onAudioTrackSwitched(event: string, data: any): void {\n    let audioTrack = this._playerTracks.find((track) => {\n      return (track instanceof AudioTrack && track.id === data.id);\n    });\n    HlsAdapter._logger.debug('Audio track changed', audioTrack);\n    this._onTrackChanged(audioTrack);\n  }\n\n  /**\n   * Disables all the video tag text tracks.\n   * @returns {void}\n   * @private\n   */\n  _disableAllTextTracks() {\n    let vidTextTracks = this._videoElement.textTracks;\n    for (let i = 0; i < vidTextTracks.length; i++) {\n      vidTextTracks[i].mode = 'hidden';\n    }\n  }\n\n  /**\n   * Handles hls errors.\n   * @param {string} event - The event name.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onError(event: string, data: any): void {\n    let errorType = data.type;\n    let errorDetails = data.details;\n    let errorFatal = data.fatal;\n    if (errorFatal) {\n      switch (errorType) {\n        case Hlsjs.ErrorTypes.NETWORK_ERROR:\n          HlsAdapter._logger.error(\"fatal network error encountered, try to recover\");\n          this._hls.startLoad();\n          break;\n        case Hlsjs.ErrorTypes.MEDIA_ERROR:\n          HlsAdapter._logger.error(\"fatal media error encountered, try to recover\");\n          this._hls.recoverMediaError();\n          break;\n        default:\n          HlsAdapter._logger.error(\"fatal error, cannot recover\");\n          this.destroy();\n          break;\n      }\n    } else {\n      switch (errorDetails) {\n        case Hlsjs.ErrorDetails.MANIFEST_LOAD_ERROR:\n        case Hlsjs.ErrorDetails.MANIFEST_LOAD_TIMEOUT:\n        case Hlsjs.ErrorDetails.MANIFEST_PARSING_ERROR:\n        case Hlsjs.ErrorDetails.LEVEL_LOAD_ERROR:\n        case Hlsjs.ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        case Hlsjs.ErrorDetails.LEVEL_SWITCH_ERROR:\n        case Hlsjs.ErrorDetails.FRAG_LOAD_ERROR:\n        case Hlsjs.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n        case Hlsjs.ErrorDetails.FRAG_LOAD_TIMEOUT:\n        case Hlsjs.ErrorDetails.FRAG_PARSING_ERROR:\n        case Hlsjs.ErrorDetails.BUFFER_APPEND_ERROR:\n        case Hlsjs.ErrorDetails.BUFFER_APPENDING_ERROR:\n          HlsAdapter._logger.error(errorType, errorDetails);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Removes hls.js bindings.\n   * @returns {void}\n   * @private\n   */\n  _removeBindings(): void {\n    this._hls.off(Hlsjs.Events.ERROR, this._onError);\n    this._hls.off(Hlsjs.Events.LEVEL_SWITCHED, this._onLevelSwitched);\n    this._hls.off(Hlsjs.Events.AUDIO_TRACK_SWITCHED, this._onAudioTrackSwitched);\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * In case the adapter preformed a load it will return the manifest url.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    if (this._loadPromise && this._sourceObj) {\n      return this._sourceObj.url;\n    }\n    return \"\";\n  }\n}\n\n// Register hls adapter to the media source adapter provider.\nif (HlsAdapter.isSupported()) {\n  registerMediaSourceAdapter(HlsAdapter);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./hls-adapter.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"hls.js\",\"commonjs2\":\"hls.js\",\"amd\":\"hls.js\",\"root\":\"Hls\"}\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}