{"version":3,"sources":["./hls/webpack/universalModuleDefinition","./hls/webpack/bootstrap 9bf6dad0685336420013","./hls/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}","./hls/external {\"commonjs\":\"hls.js\",\"commonjs2\":\"hls.js\",\"amd\":\"hls.js\",\"root\":\"Hls\"}","./hls/./index.js","./hls/./hls-adapter.js","./hls/./default-config.json","./hls/./errors.js","./hls/./jsonp-ploader.js"],"names":["VERSION","NAME","isSupported","HlsAdapter","videoElement","source","config","adapterConfig","Object","hasPropertyPath","hlsConfig","playback","options","html5","hls","sources","forceRedirectExternalStreams","redirectExternalStreamsCallback","mimeType","canHlsPlayType","_hlsMimeTypes","includes","toLowerCase","_logger","debug","toString","warn","isHlsSupported","version","_triedReloadWithRedirect","_startTime","_config","mergeDeep","_hls","_addBindings","on","Events","ERROR","e","data","_onError","MANIFEST_LOADED","_onManifestLoaded","bind","LEVEL_SWITCHED","_onLevelSwitched","AUDIO_TRACK_SWITCHED","_onAudioTrackSwitched","startTime","_loadPromise","Promise","resolve","_resolveLoad","_loadInternal","_onLoadedMetadataCallback","_onLoadedMetadata","_videoElement","addEventListener","LOADED_METADATA","startPosition","_sourceObj","url","loadSource","attachMedia","_trigger","ABR_MODE_CHANGED","mode","isAdaptiveBitrateEnabled","_reset","_removeLoadedMetadataListener","tracks","_playerTracks","removeEventListener","then","_removeBindings","detachMedia","destroy","audioTracks","_parseAudioTracks","videoTracks","_parseVideoTracks","levels","textTracks","_parseTextTracks","subtitleTracks","concat","hlsAudioTracks","i","length","settings","id","active","audioTrack","label","name","language","lang","index","push","hlsVideoTracks","startLevel","bandwidth","bitrate","width","height","hlsTextTracks","default","kind","type","videoTrack","currentLevel","textTrack","_disableAllTextTracks","_onTrackChanged","nextLevel","autoLevelEnabled","level","nextAutoLevel","nextLoadLevel","details","liveEdge","liveSyncPosition","liveSyncDuration","duration","liveSyncDurationCount","_getLevelDetails","targetduration","currentTime","_getLiveEdge","live","startLoad","_parseTracks","event","find","track","_handleWaitingUponAudioTrackSwitch","affectedBrowsers","browser","timeUpdateListener","PLAYING","TIME_UPDATE","vidTextTracks","errorType","errorDetails","errorFatal","fatal","error","ErrorTypes","NETWORK_ERROR","ErrorDetails","MANIFEST_LOAD_ERROR","MANIFEST_LOAD_TIMEOUT","_reloadWithDirectManifest","Severity","CRITICAL","Category","NETWORK","Code","HTTP_ERROR","MEDIA_ERROR","_handleMediaError","RECOVERABLE","MEDIA","HLS_FATAL_MEDIA_ERROR","PLAYER","severity","category","code","now","performance","recover","_checkTimeDeltaHasPassed","_recoverDecodingErrorDate","recoverDecodingErrorDelay","_recoverDecodingError","_recoverSwapAudioCodecDate","recoverSwapAudioCodecDelay","_recoverSwapAudioCodec","delay","recoverMediaError","swapAudioCodec","off","isLive","fragments","fragLength","start","end","maxLatency","liveMaxLatencyDuration","undefined","liveMaxLatencyDurationCount","minPosToSeek","Math","max","maxFragLookUpTolerance","getLogger","HlsJsErrorMap","MANIFEST","TIMEOUT","MANIFEST_PARSING_ERROR","HLSJS_CANNOT_PARSE","LEVEL_LOAD_ERROR","LEVEL_LOAD_TIMEOUT","LEVEL_SWITCH_ERROR","BITRATE_SWITCH_ISSUE","FRAG_LOAD_ERROR","FRAG_LOOP_LOADING_ERROR","FRAG_LOAD_TIMEOUT","FRAG_PARSING_ERROR","HLS_FRAG_PARSING_ERROR","BUFFER_APPEND_ERROR","HLS_BUFFER_APPEND_ISSUE","BUFFER_APPENDING_ERROR","HLS_BUFFER_APPENDING_ISSUE","BUFFER_STALLED_ERROR","HLS_BUFFER_STALLED_ERROR","pLoader","loadOrig","load","callback","context","callbacks","Http","jsonp","uri","DefaultConfig","loader"],"mappings":"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","file":"playkit-hls.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"), require(\"hls.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\", \"hls.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hls\"] = factory(require(\"playkit-js\"), require(\"hls.js\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"hls\"] = factory(root[\"playkit\"][\"core\"], root[\"Hls\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9bf6dad0685336420013","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"hls.js\",\"commonjs2\":\"hls.js\",\"amd\":\"hls.js\",\"root\":\"Hls\"}\n// module id = 1\n// module chunks = 0","// @flow\nimport {registerMediaSourceAdapter} from 'playkit-js'\nimport HlsAdapter from './hls-adapter'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nexport default HlsAdapter;\nexport {__VERSION__ as VERSION, __NAME__ as NAME};\n\n// Register hls adapter to the media source adapter provider.\nif (HlsAdapter.isSupported()) {\n  registerMediaSourceAdapter(HlsAdapter);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","//@flow\nimport Hlsjs from 'hls.js'\nimport DefaultConfig from './default-config'\nimport {HlsJsErrorMap, type ErrorDetailsType} from \"./errors\"\nimport {BaseMediaSourceAdapter, Utils, Error, Env} from 'playkit-js'\nimport {Track, VideoTrack, AudioTrack, TextTrack} from 'playkit-js'\nimport {EventType} from 'playkit-js'\nimport pLoader from './jsonp-ploader'\n\n/**\n * Adapter of hls.js lib for hls content.\n * @classdesc\n */\nexport default class HlsAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of the adapter.\n   * @member {string} id\n   * @static\n   * @private\n   */\n  static id: string = 'HlsAdapter';\n  /**\n   * The adapter logger.\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(HlsAdapter.id);\n  /**\n   * The supported mime types by the hls adapter.\n   * @member {Array<string>} _hlsMimeType\n   * @static\n   * @private\n   */\n  static _hlsMimeTypes: Array<string> = [\n    'application/x-mpegurl',\n    'application/vnd.apple.mpegurl',\n    'audio/mpegurl',\n    'audio/x-mpegurl',\n    'video/x-mpegurl',\n    'video/mpegurl',\n    'application/mpegurl'\n  ];\n  /**\n   * The hls player instance.\n   * @member {any} _hls\n   * @private\n   */\n  _hls: any;\n\n  /**\n   * last recover date from decoding error\n   * @type {number}\n   * @private\n   */\n  _recoverDecodingErrorDate: number;\n\n  /**\n   * last recover date from audio swap codec operation\n   * @type {number}\n   * @private\n   */\n  _recoverSwapAudioCodecDate: number;\n\n  /**\n   * indicate if external redirect was performed\n   * @type {boolean}\n   * @private\n   */\n  _triedReloadWithRedirect: boolean = false;\n\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Reference to the player tracks.\n   * @member {Array<Track>} - _playerTracks\n   * @type {Array<Track>}\n   * @private\n   */\n  _playerTracks: Array<Track>;\n\n  /**\n   * stream start time in seconds\n   * @type {?number}\n   * @private\n   */\n  _startTime: ?number = 0;\n\n  /**\n   * Reference to _onLoadedMetadata function\n   * @member {?Function} - _onLoadedMetadataCallback\n   * @type {?Function}\n   * @private\n   */\n  _onLoadedMetadataCallback: ?Function;\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {PKMediaSourceObject} source - The source Object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: PKMediaSourceObject, config: Object): IMediaSourceAdapter {\n    let adapterConfig = {};\n    if (Utils.Object.hasPropertyPath(config, 'playback.options.html5.hls')) {\n      adapterConfig.hlsConfig = config.playback.options.html5.hls;\n    }\n    if (Utils.Object.hasPropertyPath(config, 'sources.options')) {\n      const options = config.sources.options;\n      adapterConfig.forceRedirectExternalStreams = options.forceRedirectExternalStreams;\n      adapterConfig.redirectExternalStreamsCallback = options.redirectExternalStreamsCallback;\n      pLoader.redirectExternalStreamsCallback = adapterConfig.redirectExternalStreamsCallback;\n    }\n    return new this(videoElement, source, adapterConfig);\n  }\n\n  /**\n   * Checks if hls adapter can play a given mime type.\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check.\n   * @returns {boolean} - Whether the hls adapter can play a specific mime type.\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canHlsPlayType = (typeof mimeType === 'string') ? HlsAdapter._hlsMimeTypes.includes(mimeType.toLowerCase()) : false;\n    HlsAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canHlsPlayType.toString());\n    return canHlsPlayType;\n  }\n\n  /**\n   * Checks if hls adapter can play a given drm data.\n   * For hls.js it always returns false.\n   * @returns {boolean} - Whether the hls adapter can play a specific drm data.\n   * @static\n   */\n  static canPlayDrm(): boolean {\n    HlsAdapter._logger.warn('canPlayDrm result is false');\n    return false;\n  }\n\n  /**\n   * Checks if the hls adapter is supported.\n   * @function isSupported\n   * @returns {boolean} - Whether hls is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    let isHlsSupported = Hlsjs.isSupported();\n    HlsAdapter._logger.debug('isSupported:' + isHlsSupported);\n    return isHlsSupported;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which will bind to the hls adapter\n   * @param {PKMediaSourceObject} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: PKMediaSourceObject, config: Object) {\n    HlsAdapter._logger.debug('Creating adapter. Hls version: ' + Hlsjs.version);\n    super(videoElement, source, config);\n    this._config = Utils.Object.mergeDeep({}, this._config, DefaultConfig);\n    if (this._config.forceRedirectExternalStreams) {\n      this._config.hlsConfig['pLoader'] = pLoader;\n    }\n    this._hls = new Hlsjs(this._config.hlsConfig);\n    this._addBindings();\n  }\n\n  /**\n   * Adds the required bindings with hls.js.\n   * @function _addBindings\n   * @private\n   * @returns {void}\n   */\n  _addBindings(): void {\n    this._hls.on(Hlsjs.Events.ERROR, (e, data) => this._onError(data));\n    this._hls.on(Hlsjs.Events.MANIFEST_LOADED, this._onManifestLoaded.bind(this));\n    this._hls.on(Hlsjs.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._hls.on(Hlsjs.Events.AUDIO_TRACK_SWITCHED, this._onAudioTrackSwitched.bind(this));\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @param {number} startTime - Optional time to start the video from.\n   * @returns {Promise<Object>} - The loaded data\n   * @override\n   */\n  load(startTime: ?number): Promise<Object> {\n    if (!this._loadPromise) {\n      this._startTime = startTime;\n      this._loadPromise = new Promise((resolve) => {\n        this._resolveLoad = resolve;\n        this._loadInternal();\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {void}\n   * @private\n   */\n  _loadInternal() {\n    this._onLoadedMetadataCallback = this._onLoadedMetadata.bind(this);\n    this._videoElement.addEventListener(EventType.LOADED_METADATA, this._onLoadedMetadataCallback);\n    if (this._startTime) {\n      this._hls.startPosition = this._startTime;\n    }\n    if (this._sourceObj && this._sourceObj.url) {\n      this._hls.loadSource(this._sourceObj.url);\n      this._hls.attachMedia(this._videoElement);\n      this._trigger(EventType.ABR_MODE_CHANGED, {mode: this.isAdaptiveBitrateEnabled() ? 'auto' : 'manual'});\n    }\n  }\n\n  /**\n   * Load the video source with installed playlist loader\n   * @function _reloadWithDirectManifest\n   * @returns {void}\n   * @private\n   */\n  _reloadWithDirectManifest() {\n    // Mark that we tried once to redirect\n    this._triedReloadWithRedirect = true;\n    // reset hls.js\n    this._reset();\n    // re-init hls.js with the external redirect playlist loader\n    this._config.hlsConfig['pLoader'] = pLoader;\n    this._hls = new Hlsjs(this._config.hlsConfig);\n    this._addBindings();\n    this._loadInternal();\n  }\n\n  /**\n   * Loaded metadata event handler.\n   * @private\n   * @returns {void}\n   */\n  _onLoadedMetadata(): void {\n    this._removeLoadedMetadataListener();\n    this._resolveLoad({tracks: this._playerTracks});\n  }\n\n  /**\n   * Remove the loadedmetadata listener\n   * @private\n   * @returns {void}\n   */\n  _removeLoadedMetadataListener(): void {\n    if (this._onLoadedMetadataCallback) {\n      this._videoElement.removeEventListener(EventType.LOADED_METADATA, this._onLoadedMetadataCallback);\n      this._onLoadedMetadataCallback = null;\n    }\n  }\n\n  /**\n   * Destroys the hls adapter.\n   * @function destroy\n   * @override\n   * @returns {Promise<*>} - The destroy promise.\n   */\n  destroy(): Promise<*> {\n    return super.destroy().then(() => {\n      HlsAdapter._logger.debug('destroy');\n      this._loadPromise = null;\n      this._playerTracks = [];\n      this._reset();\n    });\n  }\n\n  /**\n   * reset hls.js instance and its bindings\n   * @private\n   * @returns {void}\n   */\n  _reset(): void {\n    this._removeBindings();\n    this._hls.detachMedia();\n    this._hls.destroy();\n  }\n\n  /**\n   * Parse the hls tracks into player tracks.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @private\n   */\n  _parseTracks(): Array<Track> {\n    const audioTracks = this._parseAudioTracks(this._hls.audioTracks || []);\n    const videoTracks = this._parseVideoTracks(this._hls.levels || []);\n    const textTracks = this._parseTextTracks(this._hls.subtitleTracks || []);\n    return audioTracks.concat(videoTracks).concat(textTracks);\n  }\n\n  /**\n   * Parse hls audio tracks into player audio tracks.\n   * @param {Array<Object>} hlsAudioTracks - The hls audio tracks.\n   * @returns {Array<AudioTrack>} - The parsed audio tracks.\n   * @private\n   */\n  _parseAudioTracks(hlsAudioTracks: Array<Object>): Array<AudioTrack> {\n    let audioTracks = [];\n    for (let i = 0; i < hlsAudioTracks.length; i++) {\n      // Create audio tracks\n      let settings = {\n        id: hlsAudioTracks[i].id,\n        active: this._hls.audioTrack === hlsAudioTracks[i].id,\n        label: hlsAudioTracks[i].name,\n        language: hlsAudioTracks[i].lang,\n        index: i\n      };\n      audioTracks.push(new AudioTrack(settings));\n    }\n    return audioTracks;\n  }\n\n  /**\n   * Parse hls video tracks into player video tracks.\n   * @param {Array<Object>} hlsVideoTracks - The hls video tracks.\n   * @returns {Array<VideoTrack>} - The parsed video tracks.\n   * @private\n   */\n  _parseVideoTracks(hlsVideoTracks: Array<Object>): Array<VideoTrack> {\n    let videoTracks = [];\n    for (let i = 0; i < hlsVideoTracks.length; i++) {\n      // Create video tracks\n      let settings = {\n        active: this._hls.startLevel === i,\n        label: hlsVideoTracks[i].name,\n        bandwidth: hlsVideoTracks[i].bitrate,\n        width: hlsVideoTracks[i].width,\n        height: hlsVideoTracks[i].height,\n        language: '',\n        index: i\n      };\n      videoTracks.push(new VideoTrack(settings));\n    }\n    return videoTracks;\n  }\n\n  /**\n   * Parse hls text tracks into player text tracks.\n   * @param {Array<Object>} hlsTextTracks - The hls text tracks.\n   * @returns {Array<TextTrack>} - The parsed text tracks.\n   * @private\n   */\n  _parseTextTracks(hlsTextTracks: Array<Object>): Array<TextTrack> {\n    let textTracks = [];\n    for (let i = 0; i < hlsTextTracks.length; i++) {\n      // Create text tracks\n      let settings = {\n        id: hlsTextTracks[i].id,\n        active: hlsTextTracks[i].default,\n        label: hlsTextTracks[i].name,\n        kind: hlsTextTracks[i].type.toLowerCase(),\n        language: hlsTextTracks[i].lang,\n        index: i\n      };\n      textTracks.push(new TextTrack(settings));\n    }\n    return textTracks;\n  }\n\n  /**\n   * Select an audio track.\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the audio track to select.\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (audioTrack instanceof AudioTrack && !audioTrack.active && this._hls.audioTracks) {\n      this._hls.audioTrack = audioTrack.id;\n    }\n  }\n\n  /**\n   * Select a video track.\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select.\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (videoTrack instanceof VideoTrack && (!videoTrack.active || this.isAdaptiveBitrateEnabled()) && this._hls.levels) {\n      if (this.isAdaptiveBitrateEnabled()) {\n        this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'manual'});\n      }\n      this._hls.currentLevel = videoTrack.index;\n    }\n  }\n\n  /**\n   * Select a text track.\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select.\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (textTrack instanceof TextTrack && !textTrack.active && this._videoElement.textTracks) {\n      this._disableAllTextTracks();\n      this._videoElement.textTracks[textTrack.index].mode = 'hidden';\n      HlsAdapter._logger.debug('Text track changed', textTrack);\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /** Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    this._disableAllTextTracks();\n  }\n\n  /**\n   * Enables adaptive bitrate switching according to hls.js logic.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (!this.isAdaptiveBitrateEnabled()) {\n      this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'auto'});\n      this._hls.nextLevel = -1;\n    }\n  }\n\n  /**\n   * Checking if adaptive bitrate switching is enabled.\n   * @function isAdaptiveBitrateEnabled\n   * @returns {boolean} - Whether adaptive bitrate is enabled.\n   * @public\n   */\n  isAdaptiveBitrateEnabled(): boolean {\n    return this._hls.autoLevelEnabled;\n  }\n\n  /**\n   * Returns the details of hls level\n   * @function _getLevelDetails\n   * @returns {Object} - Level details\n   * @private\n   */\n  _getLevelDetails(): Object {\n    const level = this._hls.levels[this._hls.currentLevel] || this._hls.levels[this._hls.nextLevel] || this._hls.levels[this._hls.nextAutoLevel] || this._hls.levels[this._hls.nextLoadLevel];\n    return level && level.details ? level.details : {};\n  }\n\n  /**\n   * Returns the live edge\n   * @returns {number} - live edge\n   * @private\n   */\n  _getLiveEdge(): number {\n    try {\n      let liveEdge;\n      if (this._hls.liveSyncPosition) {\n        liveEdge = this._hls.liveSyncPosition;\n      } else if (this._hls.config.liveSyncDuration) {\n        liveEdge = this._videoElement.duration - this._hls.config.liveSyncDuration;\n      } else {\n        liveEdge = this._videoElement.duration - this._hls.config.liveSyncDurationCount * this._getLevelDetails().targetduration;\n      }\n      return liveEdge > 0 ? liveEdge : this._videoElement.duration;\n    } catch (e) {\n      HlsAdapter._logger.debug('Live edge calculation failed, fall back to duration');\n      return this._videoElement.duration;\n    }\n  }\n\n  /**\n   * Seeking to live edge, calculated according hls configuration - liveSyncDuration or liveSyncDurationCount.\n   * @function seekToLiveEdge\n   * @returns {void}\n   * @public\n   */\n  seekToLiveEdge(): void {\n    try {\n      this._videoElement.currentTime = this._getLiveEdge();\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Checking if the current playback is live.\n   * @function isLive\n   * @returns {boolean} - Whether playback is live.\n   * @public\n   */\n  isLive(): boolean {\n    try {\n      return !!(this._getLevelDetails().live);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Fired after manifest has been loaded.\n   * @function _onManifestLoaded\n   * @private\n   * @returns {void}\n   */\n  _onManifestLoaded(): void {\n    HlsAdapter._logger.debug('The source has been loaded successfully');\n    this._hls.startLoad();\n    this._playerTracks = this._parseTracks();\n  }\n\n  /**\n   * Triggers on video track selection (auto or manually) the 'videotrackchanged' event forward.\n   * @function _onLevelSwitched\n   * @param {string} event - The event name.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onLevelSwitched(event: string, data: any): void {\n    let videoTrack = this._playerTracks.find((track) => {\n      return (track instanceof VideoTrack && track.index === data.level);\n    });\n    HlsAdapter._logger.debug('Video track changed', videoTrack);\n    this._onTrackChanged(videoTrack);\n  }\n\n  /**\n   * Triggers on audio track selection (auto or manually) the 'audiotrackchanged' event forward.\n   * @function _onAudioTrackSwitched\n   * @param {string} event - The event name.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onAudioTrackSwitched(event: string, data: any): void {\n    let audioTrack = this._playerTracks.find((track) => {\n      return (track instanceof AudioTrack && track.id === data.id);\n    });\n    HlsAdapter._logger.debug('Audio track changed', audioTrack);\n    this._onTrackChanged(audioTrack);\n    this._handleWaitingUponAudioTrackSwitch();\n  }\n\n  /**\n   * Trigger a playing event whenever an audio track is changed & time_update event is fired.\n   * This align Edge and IE behaviour to other browsers. When an audio track changed in IE & Edge, they trigger\n   * waiting event but not playing event.\n   * @returns {void}\n   * @private\n   */\n  _handleWaitingUponAudioTrackSwitch(): void {\n    const affectedBrowsers = ['IE', 'Edge'];\n    if (affectedBrowsers.includes(Env.browser.name)) {\n      const timeUpdateListener = () => {\n        this._trigger(EventType.PLAYING);\n        this._videoElement.removeEventListener(EventType.TIME_UPDATE, timeUpdateListener);\n      };\n      this._videoElement.addEventListener(EventType.TIME_UPDATE, timeUpdateListener)\n    }\n  }\n\n  /**\n   * Disables all the video tag text tracks.\n   * @returns {void}\n   * @private\n   */\n  _disableAllTextTracks() {\n    let vidTextTracks = this._videoElement.textTracks;\n    for (let i = 0; i < vidTextTracks.length; i++) {\n      vidTextTracks[i].mode = 'disabled';\n    }\n  }\n\n  /**\n   * Handles hls errors.\n   * @param {any} data - The event data object.\n   * @private\n   * @returns {void}\n   */\n  _onError(data: any): void {\n    const errorType = data.type;\n    const errorDetails = data.details;\n    const errorFatal = data.fatal;\n    if (errorFatal) {\n      let error: typeof Error;\n      switch (errorType) {\n        case Hlsjs.ErrorTypes.NETWORK_ERROR:\n          if ([Hlsjs.ErrorDetails.MANIFEST_LOAD_ERROR, Hlsjs.ErrorDetails.MANIFEST_LOAD_TIMEOUT].includes(errorDetails) &&\n            !this._triedReloadWithRedirect && !this._config.forceRedirectExternalStreams) {\n            this._reloadWithDirectManifest();\n          } else {\n            error = new Error(\n              Error.Severity.CRITICAL,\n              Error.Category.NETWORK,\n              Error.Code.HTTP_ERROR,\n              errorDetails);\n          }\n          break;\n        case Hlsjs.ErrorTypes.MEDIA_ERROR:\n          if (this._handleMediaError()) {\n            error = new Error(\n              Error.Severity.RECOVERABLE,\n              Error.Category.MEDIA,\n              Error.Code.HLS_FATAL_MEDIA_ERROR,\n              errorDetails);\n          } else {\n            error = new Error(\n              Error.Severity.CRITICAL,\n              Error.Category.MEDIA,\n              Error.Code.HLS_FATAL_MEDIA_ERROR,\n              errorDetails);\n          }\n          break;\n        default:\n          error = new Error(\n            Error.Severity.CRITICAL,\n            Error.Category.PLAYER,\n            Error.Code.HLS_FATAL_MEDIA_ERROR,\n            errorDetails);\n          break;\n      }\n      this._trigger(EventType.ERROR, error);\n      if (error && error.severity === Error.Severity.CRITICAL) {\n        this.destroy();\n      }\n    } else {\n      const {category, code}: ErrorDetailsType = HlsJsErrorMap[errorDetails] || {category: 0, code: 0};\n      HlsAdapter._logger.warn(new Error(\n        Error.Severity.RECOVERABLE,\n        category,\n        code,\n        errorDetails));\n    }\n  }\n\n  /**\n   * Tries to handle media errors via hls.js error handlers\n   * @returns {boolean} - if media error is handled or not\n   * @private\n   */\n  _handleMediaError(): boolean {\n    const now: number = performance.now();\n    let recover = true;\n    if (this._checkTimeDeltaHasPassed(now, this._recoverDecodingErrorDate, this._config.recoverDecodingErrorDelay)) {\n      this._recoverDecodingError();\n    } else {\n      if (this._checkTimeDeltaHasPassed(now, this._recoverSwapAudioCodecDate, this._config.recoverSwapAudioCodecDelay)) {\n        this._recoverSwapAudioCodec();\n      } else {\n        recover = false;\n        HlsAdapter._logger.error(\"cannot recover, last media error recovery failed\");\n      }\n    }\n    return recover;\n  }\n\n  /**\n   * Check if time ahs passed a certain delta\n   * @param {number} now - current time\n   * @param {number} then - previous time\n   * @param {number} delay - time delta in ms\n   * @returns {boolean} - if time delta has\n   * @private\n   */\n  _checkTimeDeltaHasPassed(now: number, then: number, delay: number): boolean {\n    return (!then || (now - then) > delay);\n  }\n\n  /**\n   * handle recover from decoding error\n   * @returns {void}\n   * @private\n   */\n  _recoverDecodingError(): void {\n    this._recoverDecodingErrorDate = performance.now();\n    HlsAdapter._logger.warn(\"try to recover media Error\");\n    this._hls.recoverMediaError();\n  }\n\n  /**\n   * handle recover from decoding error by swaping audio codec\n   * @returns {void}\n   * @private\n   */\n  _recoverSwapAudioCodec(): void {\n    this._recoverSwapAudioCodecDate = performance.now();\n    HlsAdapter._logger.warn(\"try to swap Audio Codec and recover media Error\");\n    this._hls.swapAudioCodec();\n    this._hls.recoverMediaError();\n  }\n\n  /**\n   * Removes hls.js bindings.\n   * @returns {void}\n   * @private\n   */\n  _removeBindings(): void {\n    this._hls.off(Hlsjs.Events.ERROR, this._onError);\n    this._hls.off(Hlsjs.Events.LEVEL_SWITCHED, this._onLevelSwitched);\n    this._hls.off(Hlsjs.Events.AUDIO_TRACK_SWITCHED, this._onAudioTrackSwitched);\n    this._removeLoadedMetadataListener();\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * In case the adapter preformed a load it will return the manifest url.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    if (this._loadPromise && this._sourceObj) {\n      return this._sourceObj.url;\n    }\n    return \"\";\n  }\n\n  /**\n   * Get the start time of DVR window in live playback in seconds.\n   * @returns {Number} - start time of DVR window.\n   * @public\n   */\n  getStartTimeOfDvrWindow(): number {\n    if (this.isLive()) {\n      try {\n        const nextLoadLevel = this._hls.levels[this._hls.nextLoadLevel],\n          details = nextLoadLevel.details,\n          fragments = details.fragments,\n          fragLength = fragments.length,\n          start = fragments[0].start + fragments[0].duration,\n          end = fragments[fragLength - 1].start + fragments[fragLength - 1].duration,\n          maxLatency = this._hls.config.liveMaxLatencyDuration !== undefined ? this._hls.config.liveMaxLatencyDuration : this._hls.config.liveMaxLatencyDurationCount * details.targetduration,\n          minPosToSeek = Math.max(start - this._hls.config.maxFragLookUpTolerance, end - maxLatency);\n        return minPosToSeek;\n      }\n      catch (e) {\n        HlsAdapter._logger.debug('Unable obtain the start of DVR window');\n        return 0;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./hls-adapter.js","module.exports = {\n\t\"recoverDecodingErrorDelay\": 3000,\n\t\"recoverSwapAudioCodecDelay\": 3000,\n\t\"hlsConfig\": {\n\t\t\"fragLoadingMaxRetry\": 4,\n\t\t\"maxMaxBufferLength\": 60\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./default-config.json\n// module id = 4\n// module chunks = 0","// @flow\nimport Hlsjs from 'hls.js'\nimport {Error} from 'playkit-js'\n\ntype ErrorDetailsType = {category: number, code: number};\ntype HlsJsErrorMapType = {[name: string]: ErrorDetailsType};\n\nconst HlsJsErrorMap: HlsJsErrorMapType = {\n  [Hlsjs.ErrorDetails.MANIFEST_LOAD_ERROR]: {\n    category: Error.Category.MANIFEST,\n    code: Error.Code.HTTP_ERROR\n  },\n  [Hlsjs.ErrorDetails.MANIFEST_LOAD_TIMEOUT]: {\n    category: Error.Category.MANIFEST,\n    code: Error.Code.TIMEOUT\n  },\n  [Hlsjs.ErrorDetails.MANIFEST_PARSING_ERROR]: {\n    category: Error.Category.MANIFEST,\n    code: Error.Code.HLSJS_CANNOT_PARSE\n  },\n  [Hlsjs.ErrorDetails.LEVEL_LOAD_ERROR]: {\n    category: Error.Category.NETWORK,\n    code: Error.Code.HTTP_ERROR\n  },\n  [Hlsjs.ErrorDetails.LEVEL_LOAD_TIMEOUT]: {\n    category: Error.Category.NETWORK,\n    code: Error.Code.TIMEOUT\n  },\n  [Hlsjs.ErrorDetails.LEVEL_SWITCH_ERROR]: {\n    category: Error.Category.PLAYER,\n    code: Error.Code.BITRATE_SWITCH_ISSUE\n  },\n  [Hlsjs.ErrorDetails.FRAG_LOAD_ERROR]: {\n    category: Error.Category.NETWORK,\n    code: Error.Code.HTTP_ERROR\n  },\n  [Hlsjs.ErrorDetails.FRAG_LOOP_LOADING_ERROR]: {\n    category: Error.Category.NETWORK,\n    code: Error.Code.HTTP_ERROR\n  },\n  [Hlsjs.ErrorDetails.FRAG_LOAD_TIMEOUT]: {\n    category: Error.Category.NETWORK,\n    code: Error.Code.TIMEOUT\n  },\n  [Hlsjs.ErrorDetails.FRAG_PARSING_ERROR]: {\n    category: Error.Category.MEDIA,\n    code: Error.Code.HLS_FRAG_PARSING_ERROR\n  },\n  [Hlsjs.ErrorDetails.BUFFER_APPEND_ERROR]: {\n    category: Error.Category.MEDIA,\n    code: Error.Code.HLS_BUFFER_APPEND_ISSUE\n  },\n  [Hlsjs.ErrorDetails.BUFFER_APPENDING_ERROR]: {\n    category: Error.Category.MEDIA,\n    code: Error.Code.HLS_BUFFER_APPENDING_ISSUE\n  },\n  [Hlsjs.ErrorDetails.BUFFER_STALLED_ERROR]: {\n    category: Error.Category.MEDIA,\n    code: Error.Code.HLS_BUFFER_STALLED_ERROR\n  }\n};\n\nexport {HlsJsErrorMap};\nexport type {ErrorDetailsType};\n\n\n\n// WEBPACK FOOTER //\n// ./errors.js","//@flow\nimport {Utils} from 'playkit-js'\nimport Hlsjs from 'hls.js'\n\n/**\n * A plugin override for the loader function in hls.js.\n * It checks if it should use jsonp for the manifest first, else - the regular\n * loader is called.\n */\nexport default class pLoader extends Hlsjs.DefaultConfig.loader {\n  /**\n   * redirect external stream callback function\n   * @param {string} uri - the original uri\n   * @returns {string} uri - the redirected URI\n   * @static\n   */\n  static redirectExternalStreamsCallback: Function = uri => uri;\n\n  /**\n   * @constructor\n   * @param {Object} config - hlsjs config object. it also contains the jsonp callback function\n   */\n  constructor(config: Object) {\n    super(config);\n    const loadOrig = this.load.bind(this);\n    const callback = pLoader.redirectExternalStreamsCallback;\n    this.load = (context, config, callbacks) => {\n      const url = context.url;\n      if (context.type === 'manifest') {\n        Utils.Http.jsonp(url, callback)\n          .then(uri => {\n            context.url = uri;\n            loadOrig(context, config, callbacks);\n          });\n      } else {\n        loadOrig(context, config, callbacks);\n      }\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./jsonp-ploader.js"],"sourceRoot":""}